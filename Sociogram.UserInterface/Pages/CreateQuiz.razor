@page "/createQuiz"
@using Sociogram.DAL.Repositiores.Interfaces
@using Sociogram.UserInterface.Auth
@inject ITeacherService teacherService
@inject IQuizService quizService
@inject AuthenticationStateProvider authenticationProvider
@inject NavigationManager navigationManager

<Card style="width: 469px; height: 280px; border: solid #57024e 2px; margin:auto; margin-top: 70px;">
        <CardHeader>
            <h3 style="text-align: center;">Nowe Badanie</h3>
        </CardHeader>
    <CardBody>
    <EditForm Model="Quiz" OnValidSubmit="@Post">
        <Select TValue="int" SelectedValue="@(Quiz.ClassSId)" SelectedValueChanged="@OnSelectedValueChanged">
            <SelectItem Value="0" Disabled>Wybierz Klase</SelectItem>
            @foreach(ClassS classS in ClassS)
            {
                <SelectItem Value="@(classS.Id)">@(classS.Name)</SelectItem>
            }
        </Select>
        <Button Color="Color.Primary" Type="ButtonType.Submit" style="float: right; margin: 5px; margin-top: 15px;">Utwórz</Button>
    </EditForm>
    <br />
    <br />
    <br />
    <br />
    <CardFooter>
        <p>Po utworzeniu pokaże się kod dołączenia w poczekalni.</p>
    </CardFooter>
    </CardBody>
</Card>

@code {
    public Quiz Quiz = new();
    public List<ClassS> ClassS = new List<ClassS>();

    protected override async Task OnInitializedAsync()
    {
        var authstate = await ((CustomAuthenticationStateProvider)authenticationProvider).GetAuthenticationStateAsync();
        var user = authstate.User;
        string name = user.Identity.Name;
        if(!String.IsNullOrEmpty(name))
            ClassS = teacherService.GetClassS(name);
    }

    Task OnSelectedValueChanged( int value )
    {
        Quiz.ClassSId = value;

        return Task.CompletedTask;
    }


    public async Task Post()
    {
        var authstate = await ((CustomAuthenticationStateProvider)authenticationProvider).GetAuthenticationStateAsync();
        var user = authstate.User;
        string name = user.Identity.Name;
        Random random = new Random();
        Quiz.JoinCode = random.Next(1000, 9999);
        quizService.CreateQuiz(Quiz, name);
        navigationManager.NavigateTo($"waitingroom/{Quiz.JoinCode}");
    }
}
